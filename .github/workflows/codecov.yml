name: Code Coverage

on:
  push:
    branches: ["main", "development", "staging"]
    paths:
      - 'services/**/*.py'
      - 'services/**/requirements.txt'
  pull_request:
    branches: ["main", "development", "staging"]
    paths:
      - 'services/**/*.py'
      - 'services/**/requirements.txt'

jobs:
  test:
    name: Coverage for ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - search-service
        python-version: ['3.11', '3.14']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for better coverage analysis

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'services/${{ matrix.service }}/requirements.txt'

    - name: Install dependencies
      working-directory: services/${{ matrix.service }}
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests with coverage
      working-directory: services/${{ matrix.service }}
      run: |
        pytest -v \
          --cov=app \
          --cov-report=xml:coverage.xml \
          --cov-report=html \
          --cov-report=term-missing
      env:
        VAULT_ADDR: "http://localhost:8200"
        VAULT_TOKEN: "test-token"
        USE_LOCAL_DB: "true"

    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.14'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: services/${{ matrix.service }}/coverage.xml
        flags: ${{ matrix.service }}
        name: codecov-${{ matrix.service }}
        fail_ci_if_error: false
        verbose: true

    - name: Upload coverage artifact
      if: matrix.python-version == '3.14'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.service }}-${{ matrix.python-version }}
        path: services/${{ matrix.service }}/htmlcov/
        retention-days: 30
