# This workflow runs pytest for all Python microservices
# Integrated with CodeCov for coverage reporting

name: Pytest

on:
  push:
    branches: ["main", "develop", "staging"]
    paths:
      - 'services/**/*.py'
      - 'services/**/requirements.txt'
      - 'services/**/pyproject.toml'
  pull_request:
    branches: ["main", "develop", "staging"]
    paths:
      - 'services/**/*.py'
      - 'services/**/requirements.txt'
      - 'services/**/pyproject.toml'

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Test ${{ matrix.service }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        service:
          - auth-service
          - search-service
          - frontend-service
        python-version: ["3.11", "3.14"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: "${{ matrix.python-version }}"
        cache: 'pip'
        cache-dependency-path: 'services/${{ matrix.service }}/requirements.txt'
    
    - name: Install dependencies
      working-directory: services/${{ matrix.service }}
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio
        if [ -f requirements.txt ]; then 
          pip install -r requirements.txt
        fi
    
    - name: Run tests with coverage
      working-directory: services/${{ matrix.service }}
      run: |
        pytest -v \
          --cov=app \
          --cov-report=xml:coverage.xml \
          --cov-report=term-missing \
          --junitxml=junit.xml
      env:
        VAULT_ADDR: "http://localhost:8200"
        VAULT_TOKEN: "test-token"
        USE_LOCAL_DB: "true"
    
    - name: Upload coverage to CodeCov
      if: matrix.python-version == '3.14'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: services/${{ matrix.service }}/coverage.xml
        flags: ${{ matrix.service }}
        name: codecov-${{ matrix.service }}
        fail_ci_if_error: false
        verbose: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.service }}-py${{ matrix.python-version }}
        path: |
          services/${{ matrix.service }}/coverage.xml
          services/${{ matrix.service }}/junit.xml
